import { jsPDF } from 'https://cdn.skypack.dev/jspdf@2.4.0';

// Colors
const black_color = "#000000";
const green_color = "#3CCB83";
const red_color = "#EF5C5C";
const purple_color = "#8F39A9";
const light_purple_color = "#F6E8FA";
const gray_color = "#E6E9EF";
const dark_gray_color = "#344563";

const gap = 0.7;
const lineGap = 8;
const doc = new jsPDF({ orientation: "landscape", unit: "mm" });

const projectInfo = {
    "reportGeneratedBy": "Yousef Roshandel",
    "reportGenerateDate": "10/05/2022 - 12:30",
    "projectDetails": [
        "Youse's Project #23",
        "C2508-156",
        "XXXXX",
        "Graham construction",
        "50mph",
        "HWM_TM_C2508-156_005"
    ]
};

// Helper function to set font and text color
const textStyle = (style, color) => {
    doc.setFont("Poppins", style);
    doc.setTextColor(color);
};

// Helper function to add rectangle with border-radius, color, height, and padding
const addRoundedRect = (x, y, width, height, borderRadius, fillColor, borderColor, borderWidth) => {
    doc.setFillColor(fillColor);
    doc.setDrawColor(borderColor);
    doc.setLineWidth(borderWidth);
    doc.roundedRect(x, y, width, height, borderRadius, borderRadius, 'FD');
};

// Helper function to add text
const addText = (text, x, y) => {
    doc.text(text, x, y);
};

const generatePDF = () => {
    const headerHeight = headerSection();
    bodySection(headerHeight);

    // Save the PDF or get the data URI
    const pdfDataUri = doc.output("datauristring");

    return pdfDataUri;
};

const headerSection = () => {
    doc.setFontSize(11);

    // Add content to the header section
    const headerText = "Header Section - Your Header Text Goes Here";
    const headerHeight = doc.getTextDimensions(headerText).h + gap; // Calculate header height

    const rectangleHeight = 52;
    const rectangleWidth = doc.internal.pageSize.width - 40;
    const rectangleHalfWidth = (doc.internal.pageSize.width - 40) / 2.1;

    addRoundedRect(20, headerHeight, rectangleWidth, rectangleHeight, 2, "#FFFFFF", purple_color, 0.5);

    // Header Section contents
    const padding = 5;
    const contentX = 20 + padding;
    const contentY = headerHeight + padding + 3;

    // Logo
    const logoWidth = 20;
    const logoHeight = 10;
    const logoX = 20 + padding;
    const logoY = headerHeight + padding + 3;
    doc.addImage('../assets/syte-logo.png', 'PNG', logoX, logoY, logoWidth, logoHeight);

    // Report Generated Details
    textStyle("bold", dark_gray_color);
    addText("Report Generated by:", contentX, contentY + 30);
    addText("Report Generate Date:", contentX, contentY + 30 + lineGap);

    textStyle("normal", dark_gray_color);
    addText(projectInfo.reportGeneratedBy, contentX + 40, contentY + 30);
    addText(projectInfo.reportGenerateDate, contentX + 40, contentY + 30 + lineGap);

    // Report Details
    textStyle("bold", dark_gray_color);
    addText("Project Name:", rectangleHalfWidth, contentY);
    addText("Project Number:", rectangleHalfWidth, contentY + lineGap);
    addText("Client Project Number:", rectangleHalfWidth, contentY + lineGap * 2);
    addText("Customer / Client:", rectangleHalfWidth, contentY + lineGap * 3);
    addText("Traffic Management Type:", rectangleHalfWidth, contentY + lineGap * 4);
    addText("Checked in Accordance with Drawing Number(s):", rectangleHalfWidth, contentY + lineGap * 5);

    const detailsYSpace = 85;
    textStyle("normal", dark_gray_color);
    projectInfo.projectDetails.forEach((detail, index) => {
        addText(detail, rectangleHalfWidth + detailsYSpace, contentY + lineGap * index);
    });

    return headerHeight + rectangleHeight;
};

const bodySection = (headerHeight) => {
    doc.setFontSize(12);

    // Add content to the PDF table section
    addText("Your table content goes here...", 20, headerHeight + lineGap);
};

export default generatePDF;
